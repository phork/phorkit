@import './mixins.css';

.navigation {
  align-items: center;
  border-radius: var(--navigation-border-radius, 0);
  display: flex;
  position: relative;

  &:focus,
  &.is-focused {
    outline: none;

    &.is-accessible {
      box-shadow: 0 0 0 1px var(--navigation-focused-border-color) inset;
    }
  }
}

.navigation--horizontal {
  flex-direction: row;
  justify-content: center;
}

.navigation--vertical {
  flex-direction: column;
  justify-content: flex-start;
}

.navigation--fullHeight {
  height: 100%;
}

.navigation--fullWidth {
  width: 100%;
}

.navigation--primary,
.navigation--secondary,
.navigation--tertiary {
  @mixin themed .navigation {
    --navigation-focused-border-color: var(--phork-accent-color, $theme-color-accent);
    --navigation-item-selected-border-color: var(--phork-accent-color, $theme-color-accent);
    --navigation-item-selected-text-color: $theme-primary-palette-text-color;
    --navigation-item-text-color: $theme-color-FG20;
  }
}

.navigation--primary {
  --navigation-item-highlight-border-width: 3px;

  display: flex;
  font-size: $font-size-medium;

  @mixin themed .navigation {
    --navigation-item-focused-background-color: var(--phork-accent-color, $theme-color-accent);
    --navigation-item-selected-background-color: $theme-color-BG50-O20;
    --navigation-item-focused-text-color: $theme-contrast-palette-text-color;
  }
}

.navigation--secondary {
  --navigation-item-highlight-border-width: 3px;

  display: inline-flex;
  font-size: $font-size-medium;
  letter-spacing: 0.04rem;

  @mixin themed .navigation {
    --navigation-item-focused-background-color: $theme-color-BG50-O20;
    --navigation-item-hovered-border-color: $theme-color-BG50;
  }
}

.navigation--tertiary {
  --navigation-item-highlight-border-width: 0;

  display: inline-flex;
  font-size: $font-size-medium;
  letter-spacing: 0.04rem;

  @mixin themed .navigation {
    --navigation-item-focused-background-color: $theme-color-BG50-O30;
    --navigation-item-focused-selected-background-color: var(--phork-accent-color-L10, $theme-color-accent-L10);
    --navigation-item-focused-selected-text-color: $theme-contrast-palette-text-color;
    --navigation-item-selected-background-color: var(--phork-accent-color, $theme-color-accent);
    --navigation-item-selected-text-color: $theme-contrast-palette-text-color;
  }
}

button.navigationItem {
  @mixin unbutton;
}

/**
 * 1. Set the z-index so variants can choose to put
 *    pseudo elements above or below.
 * 2. This is used with the styled navigation.
 */
.navigationItem {
  align-items: center;
  background-color: var(--navigation-item-background-color); /* 2 */
  border-radius: var(--navigation-item-border-radius, 0);
  color: var(--navigation-item-text-color);
  cursor: pointer;
  display: flex;
  flex-direction: row;
  justify-content: center;
  position: relative;
  text-decoration: none;
  z-index: 2; /* [1] */

  &.is-selected {
    @mixin addBorderHighlight var(--navigation-item-selected-border-color),
      var(--navigation-item-highlight-border-width);

    background-color: var(--navigation-item-selected-background-color);
    color: var(--navigation-item-selected-text-color);
  }

  .navigation:not(.is-accessible) & {
    &:hover,
    &.is-hovered {
      background: var(--navigation-item-focused-background-color);
      color: var(--navigation-item-focused-text-color);
    }
  }

  /**
   * 1. Purposefully exclude :focus here because the browser
   *    focus is no longer relevant in accessible mode.
   */
  .navigation.is-accessible & {
    &.is-focused /* [1] */ {
      background: var(--navigation-item-focused-background-color);
      color: var(--navigation-item-focused-text-color);
    }
  }

  &:focus {
    outline: none;
  }

  &:disabled,
  &.is-disabled {
    opacity: $opacity-disabled;
    pointer-events: none;
  }
}

.navigationItem--primary {
  &.navigationItem--horizontal {
    flex: 1;
    height: $element-height-3xlarge;
    width: 100%;
  }

  &.navigationItem--vertical {
    flex: none;
    height: $element-height-xlarge;
    justify-content: flex-start;
    width: 100%;

    &:not(.navigationItem--flush) {
      padding: 0 20px;
    }
  }
}

.navigationItem--secondary,
.navigationItem--tertiary {
  &.navigationItem--horizontal {
    &:not(.navigationItem--flush) {
      padding: 8px 20px;
    }
  }

  &.navigationItem--vertical {
    flex: none;
    height: auto;
    justify-content: flex-start;
    width: 100%;

    &:not(.navigationItem--flush) {
      padding: 8px 24px;
    }
  }
}

.navigationItem--tertiary {
  transition: color 200ms ease-out;

  .navigation:not(.is-accessible) & {
    &:hover,
    &.is-hovered {
      &.is-selected {
        background-color: var(--navigation-item-focused-selected-background-color);
        color: var(--navigation-item-focused-selected-text-color);
      }
    }
  }

  .navigation.is-accessible & {
    &.is-focused {
      &.is-selected {
        background-color: var(--navigation-item-focused-selected-background-color);
        color: var(--navigation-item-focused-selected-text-color);
      }
    }
  }
}

.navigationItem--flush {
  padding: 0;
}

.navigationItem a {
  color: currentColor;
  outline: none;
}

/**
 * 1. Hide the selected styles on animated items so the
 *    styles can be applied to the pseudo element with
 *    animation.
 */
.navigation--animated {
  @mixin addBorderHighlight var(--navigation-item-selected-border-color), var(--navigation-item-highlight-border-width),
    var(--navigation-pseudo-item-position-top, 0), var(--navigation-pseudo-item-position-left, 0),
    var(--navigation-pseudo-item-position-width, 0), var(--navigation-pseudo-item-position-height, 0);

  &:before {
    background-color: var(--navigation-item-selected-background-color);
    border-radius: var(--navigation-item-border-radius);
    transition: all 300ms ease-out;
    z-index: 1;
  }

  &.navigation--secondary {
    &:before {
      z-index: 3;
    }
  }

  .navigationItem.is-selected {
    background-color: transparent;

    &:before {
      content: none; /* [1] */
    }
  }
}

.navigationItemLink {
  align-items: center;
  color: currentColor;
  display: flex;
  height: 100%;
  justify-content: center;
  text-decoration: none;
  width: 100%;

  &:hover,
  &:focus,
  &:active {
    color: currentColor;
    outline: none;
  }
}
