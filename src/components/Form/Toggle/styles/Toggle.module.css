.toggle {
  $default-toggle-width: 40px;
  $default-toggle-height: 24px;
  $default-toggle-border-width: 3px;
  $button-box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.1);

  align-items: flex-start;
  display: inline-flex;
  flex-direction: row;
  position: relative;

  &:focus {
    outline: none;
  }

  &.is-disabled {
    opacity: 0.6;
    pointer-events: none;
  }
}

.toggle--full {
  justify-content: space-between;
  width: 100%;
}

.toggle--reverse {
  flex-direction: row-reverse;
}

input.toggleInput {
  @mixin visuallyHidden;
}

.toggleLabel {
  margin-left: calc(0.35 * var(--toggle-width, $default-toggle-width));
  margin-top: 5px;

  .toggle--reverse & {
    margin-left: 0;
    margin-right: calc(0.35 * var(--toggle-width, $default-toggle-width));
  }
}

.toggleInputContainer {
  flex: none;
  height: var(--toggle-height, $default-toggle-height);
  position: relative;
  width: var(--toggle-width, $default-toggle-width);

  &:before {
    background-color: var(--toggle-background-color);
    border-radius: var(--toggle-height, $default-toggle-height);
    content: '';
    height: var(--toggle-height, $default-toggle-height);
    left: 0;
    min-width: var(--toggle-width, $default-toggle-width);
    position: absolute;
    top: 0;
    transition: 300ms;
    width: var(--toggle-width, $default-toggle-width);
  }

  &:after {
    background-color: var(--toggle-button-background-color);
    border-radius: 50%;
    bottom: var(--toggle-border-width, $default-toggle-border-width);
    box-shadow: $button-box-shadow;
    content: '';
    height: calc(
      var(--toggle-height, $default-toggle-height) - calc(var(--toggle-border-width, $default-toggle-border-width) * 2)
    );
    left: var(--toggle-border-width, $default-toggle-border-width);
    position: absolute;
    top: var(--toggle-border-width, $default-toggle-border-width);
    transition: all 300ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
    width: calc(
      var(--toggle-height, $default-toggle-height) - calc(var(--toggle-border-width, $default-toggle-border-width) * 2)
    );
  }

  .toggle.is-checked & {
    &:before {
      background-color: var(--toggle-checked-background-color);
    }

    &:after {
      background-color: var(--toggle-checked-button-background-color);
      left: calc(
        var(--toggle-width, $default-toggle-width) - var(--toggle-height, $default-toggle-height) +
          var(--toggle-border-width, $default-toggle-border-width)
      );
    }
  }

  /**
   * Remove the bounce and speed up the off transition.
   */
  .toggle:not(.is-checked) & {
    &:after {
      transition-timing-function: linear;
      transition-duration: 200ms;
    }
  }
}

.toggleInputContainerFocusRing {
  border-radius: var(--toggle-height, $default-toggle-height);
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;

  &:before {
    border-radius: inherit;
    bottom: 0;
    box-shadow: 0 0 0 0 transparent;
    content: '';
    left: 0;
    opacity: 0.2;
    position: absolute;
    right: 0;
    top: 0;
    transition: box-shadow 200ms ease;
  }

  &:after {
    border-radius: inherit;
    bottom: -2px;
    box-shadow: 0 0 0 0 transparent;
    content: '';
    left: -2px;
    position: absolute;
    right: -2px;
    top: -2px;
    transition: box-shadow 200ms ease;
  }
}

.toggle.is-focused.is-accessible {
  .toggleInputContainerFocusRing {
    &:after {
      box-shadow: var(--toggle-unchecked-focused-box-shadow);
    }
  }

  &.is-checked {
    .toggleInputContainerFocusRing {
      &:after {
        box-shadow: var(--toggle-checked-focused-box-shadow);
      }
    }
  }
}

.toggle:hover {
  .toggleInputContainerFocusRing {
    &:before {
      box-shadow: var(--toggle-unchecked-hover-box-shadow);
    }
  }

  &.is-checked {
    .toggleInputContainerFocusRing {
      &:before {
        box-shadow: var(--toggle-checked-hover-box-shadow);
        opacity: var(--toggle-checked-hover-opacity, 0.2);
      }
    }
  }
}

.toggle--small {
  --toggle-width: 32px;
  --toggle-height: 20px;
  --toggle-border-width: 2px;

  .toggleLabel {
    margin-top: 3px;
  }
}

.toggle--primary {
  &.toggle--light {
    --toggle-background-color: $light-color-BG40;
    --toggle-button-background-color: $light-color-BG05;
    --toggle-checked-background-color: $light-primary-palette-accent-color;
    --toggle-checked-button-background-color: $light-color-BG05;
    --toggle-checked-hover-box-shadow: 0 0 0 4px $light-color-accent-primary;
    --toggle-checked-focused-box-shadow: 0 0 0 1px $light-color-accent-primary;
    --toggle-unchecked-hover-box-shadow: 0 0 0 4px $light-color-FG0-O40;
    --toggle-unchecked-focused-box-shadow: 0 0 0 1px $light-color-FG0-O40;
  }

  &.toggle--dark {
    --toggle-background-color: $dark-color-FG50;
    --toggle-button-background-color: $dark-color-FG30;
    --toggle-checked-background-color: $dark-primary-palette-accent-color;
    --toggle-checked-button-background-color: $dark-color-FG0;
    --toggle-checked-hover-box-shadow: 0 0 0 4px $dark-color-accent-primary;
    --toggle-checked-focused-box-shadow: 0 0 0 1px $dark-color-accent-primary;
    --toggle-unchecked-hover-box-shadow: 0 0 0 4px $dark-color-FG0-O40;
    --toggle-unchecked-focused-box-shadow: 0 0 0 1px $dark-color-FG0-O40;

    --toggle-checked-hover-opacity: 0.3;
  }
}

.toggle--contrast {
  @mixin themed .toggle {
    --toggle-background-color: $theme-contrast-palette-quietest-color;
    --toggle-button-background-color: $theme-contrast-palette-quieter-color;
    --toggle-checked-background-color: $theme-contrast-palette-quietest-color;
    --toggle-checked-button-background-color: $theme-contrast-palette-accent-color;
    --toggle-checked-hover-box-shadow: 0 0 0 4px $theme-contrast-palette-accent-color;
    --toggle-checked-focused-box-shadow: 0 0 0 1px $theme-contrast-palette-accent-color;
    --toggle-unchecked-hover-box-shadow: 0 0 0 4px $theme-contrast-palette-quietest-color;
    --toggle-unchecked-focused-box-shadow: 0 0 0 1px $theme-contrast-palette-quietest-color;
  }
}

/**
 * A stronger version of the toggle that doesn't
 * have its colors muted to match the other form
 * inputs.
 */
.toggle--contrast.toggle--standalone {
  @mixin themed .toggle {
    --toggle-background-color: $theme-contrast-palette-quietest-color;
    --toggle-button-background-color: $theme-contrast-palette-quieter-color;
    --toggle-checked-background-color: $theme-contrast-palette-text-color;
    --toggle-checked-button-background-color: var(--contrast-color, $theme-contrast-palette-background-color);
  }
}
