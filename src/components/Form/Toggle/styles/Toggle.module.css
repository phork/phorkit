.toggle {
  $default-toggle-width: 40px;
  $default-toggle-height: 24px;
  $default-toggle-border-width: 3px;
  $button-box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.1);

  align-items: center;
  display: inline-flex;
  flex-direction: row;
  position: relative;

  &.is-disabled {
    opacity: 0.5;
    pointer-events: none;
  }

  &:focus {
    outline: none;
  }
}

input.toggleInput {
  @mixin visuallyHidden;
}

.toggleButton {
  flex: none;
  height: var(--toggle-height, $default-toggle-height);
  position: relative;
  width: var(--toggle-width, $default-toggle-width);

  &:before {
    background-color: var(--toggle-background-color);
    border-radius: var(--toggle-height, $default-toggle-height);
    content: '';
    height: var(--toggle-height, $default-toggle-height);
    left: 0;
    min-width: var(--toggle-width, $default-toggle-width);
    position: absolute;
    top: 0;
    transition: 300ms;
    width: var(--toggle-width, $default-toggle-width);
  }

  &:after {
    background-color: var(--toggle-button-background-color);
    border-radius: 50%;
    bottom: var(--toggle-border-width, $default-toggle-border-width);
    box-shadow: $button-box-shadow;
    content: '';
    height: calc(
      var(--toggle-height, $default-toggle-height) - calc(var(--toggle-border-width, $default-toggle-border-width) * 2)
    );
    left: var(--toggle-border-width, $default-toggle-border-width);
    position: absolute;
    top: var(--toggle-border-width, $default-toggle-border-width);
    transition: all 300ms cubic-bezier(0.18, 0.89, 0.32, 1.28);
    width: calc(
      var(--toggle-height, $default-toggle-height) - calc(var(--toggle-border-width, $default-toggle-border-width) * 2)
    );
  }

  .toggle.is-checked & {
    &:before {
      background-color: var(--toggle-checked-background-color);
    }

    &:after {
      background-color: var(--toggle-checked-button-background-color);
      left: calc(
        var(--toggle-width, $default-toggle-width) - var(--toggle-height, $default-toggle-height) +
          var(--toggle-border-width, $default-toggle-border-width)
      );
    }
  }

  /**
   * Remove the bounce and speed up the off transition.
   */
  .toggle:not(.is-checked) & {
    &:after {
      transition-timing-function: linear;
      transition-duration: 200ms;
    }
  }

  /**
   * 1. Set the background color of the toggle to show
   *    through the mask and create a center dot.
   *
   * 2. Use a box shadow as a mask to show a dot in the
   *    middle of the toggle when focused.
   */
  .toggle.is-checked:hover &,
  .toggle.is-checked:focus &,
  .toggle.is-checked.is-focused & {
    &:after {
      background-color: var(--toggle-checked-background-color); /* [1] */
      box-shadow: $button-box-shadow,
        inset 0px 0px 0px 2px
          var(--toggle-checked-button-background-color); /* [2] */
    }
  }

  /**
   * 1. Set the background color of the toggle to show
   *    through the mask and create a center dot.
   *
   * 2. Use a box shadow as a mask to show a dot in the
   *    middle of the toggle when focused.
   */
  .toggle:not(.is-checked):hover &,
  .toggle:not(.is-checked):focus &,
  .toggle:not(.is-checked).is-focused & {
    &:after {
      background-color: var(--toggle-background-color); /* [1] */
      box-shadow: $button-box-shadow,
        inset 0px 0px 0px 2px
          var(--toggle-button-background-color); /* [2] */
    }
  }
}

.toggleButtonFocusRing {
  position: absolute;
  top: -2px;
  bottom: -2px;
  left: -2px;
  right: -2px;
  border-radius: var(--toggle-height, $default-toggle-height);
  border: 1px solid var(--toggle-checked-button-background-color);
}

.toggleLabel {
  margin-left: calc(0.35 * var(--toggle-width, $default-toggle-width));
}

.toggle--reverse {
  flex-direction: row-reverse;
  justify-content: space-between;
  width: 100%;

  .toggleButton {
    justify-content: flex-end;
  }

  .toggleLabel {
    justify-content: flex-start;
    flex: 1;
    margin-right: calc(0.35 * var(--toggle-width, $default-toggle-width));
  }
}

.toggle--small {
  --toggle-width: 32px;
  --toggle-height: 20px;
  --toggle-border-width: 2px;
}

.toggle--primary {
  &.toggle--light {
    --toggle-background-color: $light-color-BG40;
    --toggle-button-background-color: $light-color-BG05;
    --toggle-checked-background-color: $light-primary-palette-accent-color;
    --toggle-checked-button-background-color: $light-color-BG05;
  }

  &.toggle--dark {
    --toggle-background-color: $dark-color-FG50;
    --toggle-button-background-color: $dark-color-FG30;
    --toggle-checked-background-color: $dark-primary-palette-accent-color;
    --toggle-checked-button-background-color: $dark-color-FG0;
  }
}

.toggle--contrast {
  @mixin themed .toggle {
    --toggle-background-color: $theme-contrast-palette-quietest-color;
    --toggle-button-background-color: $theme-contrast-palette-quieter-color;
    --toggle-checked-background-color: $theme-contrast-palette-quietest-color;
    --toggle-checked-button-background-color: $theme-contrast-palette-accent-color;
  }
}

/**
 * A stronger version of the toggle that doesn't
 * have its colors muted to match the other form
 * inputs.
 */
.toggle--contrast.toggle--standalone {
  @mixin themed .toggle {
    --toggle-background-color: $theme-contrast-palette-quietest-color;
    --toggle-button-background-color: $theme-contrast-palette-quieter-color;
    --toggle-checked-background-color: $theme-contrast-palette-text-color;
    --toggle-checked-button-background-color: var(--contrast-color, $theme-contrast-palette-background-color);
  }
}
