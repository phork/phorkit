.formboxReadOnlyList {
  > div {
    padding: 4px 0;
  }
}

.formboxInput {
  color: var(--formbox-input-text-color);
  display: flex;
  flex: 1;
  flex-direction: row;
  font-size: var(--formbox-input-font-size, $font-size-large);
  line-height: 1.15;
  min-height: 22px;
  min-width: 0;
  outline: none;
  padding: 4px 0;
  position: relative;

  &:focus,
  &.is-focused {
    outline: none;
  }
}

.formboxInput--centered {
  justify-content: center;
}

/**
 * This cannot use `display: none` or `visibility: hidden`
 * because that will break tab to focus.
 */
.formboxInput--hidden {
  opacity: 0;
}

.formboxInput--placeholder {
  &:not(.formboxInput--hidden) {
    opacity: var(--formbox-input-placeholder-opacity);
  }
}

.formboxInput--primary {
  @mixin themed .formbox {
    --formbox-input-text-color: $theme-primary-palette-quiet-color;
  }

  &.formboxInput--light {
    --formbox-input-placeholder-opacity: 0.4;
  }

  &.formboxInput--dark {
    --formbox-input-placeholder-opacity: 0.5;
  }
}

.formboxInput--contrast {
  @mixin themed .formboxInput {
    --formbox-input-text-color: $theme-contrast-palette-quiet-color;
    --formbox-input-placeholder-opacity: 0.5;
  }
}

/* input with formatting - these must go after .formboxInput */

.formboxInputWithFormatting {
  cursor: pointer;
  display: flex;
  flex: 1;
  position: relative;
}

.formboxInputWithFormatting__input {
  left: 0;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  width: 100%;
  z-index: 1;
}

.formboxInputWithFormatting__formatted {
  pointer-events: none;
}

/* input-specific - these must go last */

input.formboxInput,
select.formboxInput,
textarea.formboxInput {
  appearance: none;
  background-color: transparent;
  border: none;

  &::placeholder {
    color: var(--formbox-input-text-color);
    opacity: var(--formbox-input-placeholder-opacity);
  }
}

input.formboxInput[type='number'] {
  -moz-appearance: textfield;

  &::-webkit-inner-spin-button,
  &::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }
}

/**
 * 1. To add some space to the drag corner.
 */
textarea.formboxInput {
  font-size: var(--formbox-input-font-size, $font-size-large);
  line-height: var(--formbox-input-multi-line-height, 1.4);
  margin-right: 4px; /* [1] */
  padding: 2px 0 4px 0;
}

/**
 * 1. Shift the input up to the center of the visual input
 *    field so that if any app adds a "fill password" icon
 *    it appears centered and in line with the placeholder
 *    and/or the other icons.
 */
input.formboxInput--filled {
  &:not(.formboxInputWithFormatting__input) {
    transform: translateY(var(--formbox-input-vertical-content-shift, 0px));

    &:not(:-webkit-autofill) {
      transition: transform 150ms ease;
    }
  }

  &.formboxInputWithFormatting__input {
    transform: translateY(calc(-50% + var(--formbox-input-vertical-content-shift, 0px)));

    &:not(:-webkit-autofill) {
      transition: transform 150ms ease;
    }
  }
}

/**
 * Remove any autofill styles. Instead styles should be
 * put on the input container.
 */
input.formboxInput:-webkit-autofill,
input.formboxInput:-webkit-autofill:hover,
input.formboxInput:-webkit-autofill:focus,
textarea.formboxInput:-webkit-autofill,
textarea.formboxInput:-webkit-autofill:hover,
textarea.formboxInput:-webkit-autofill:focus,
select.formboxInput:-webkit-autofill,
select.formboxInput:-webkit-autofill:hover,
select.formboxInput:-webkit-autofill:focus {
  background-color: transparent;
  color: var(--formbox-input-text-color);
  font-size: var(--formbox-input-font-size, $font-size-large);
  transition-property: background-color, color;
  transition-duration: 50000s;
  transition-timing-function: ease-in-out;
  transition-delay: 0s;
}
